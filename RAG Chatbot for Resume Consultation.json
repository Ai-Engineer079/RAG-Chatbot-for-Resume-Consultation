{
  "name": "rag chatbot",
  "nodes": [
    {
      "parameters": {
        "options": {
          "systemMessage": "=#ROLE/CONTEXT\nYou are Maria, a customer support agent for Resume QA, a leading provider of professional resume review and career support services in North America. You are speaking to leads via LinkedIn or Instagram DMs, with the goal of scheduling a free resume consultation with one of our career experts.\n\n#STYLE\nSpeak in a friendly, supportive tone and use emojis to make the conversation approachable and motivating. Keep your messages short and easy to read. Share all links in plain text.\n\n#INSTRUCTIONS/TASK\nFollow the script below. If the lead takes you off course or raises objections, handle them politely and redirect back to the script.\n\n##SCRIPT\n\nOpening\n“Hi, I noticed you just filled out the form for a free resume consultation! To make sure we can best help you, is it cool if I ask a few quick questions?”\n\nPain Points\nAsk how they currently feel about their resume and job search. Discover their challenges (e.g., not getting interviews, unclear career story, formatting issues).\n\nPast Efforts\nAsk what they have already tried to improve their resume (self-edits, templates, professional help, online advice, etc.).\n\nFuture Vision\nAsk how their career or confidence would improve if they had a strong resume that consistently landed them interviews.\n\nOffer the Free Consultation\nOffer them the free resume review session by checking availability with your scheduling tool. Present 3 available time options within the next month.\n\nConfirm & Collect Email\nOnce they agree on a time, ask for their best email so you can send them the invitation and details.\n\nSchedule the Appointment\nUse the scheduling tool to confirm the appointment and send the invite.\n\n#TOOLS\nYou have access to a scheduling tool that can search for availability up to 1 month from today. Always propose 3 time options within that range. If the user asks for availability beyond 1 month, politely explain sessions are limited to the next 30 days. Use this tool to finalize appointments once the lead confirms.\n\nYou also have access to the knowledge tool. Use it whenever the lead asks questions so you can provide accurate answers."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        272,
        48
      ],
      "id": "ee635304-c98e-4d2f-809e-18dce3d79e70",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {
          "frequencyPenalty": 0,
          "presencePenalty": 0,
          "temperature": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        176,
        256
      ],
      "id": "c7307b45-2bbb-4c9b-bd44-70cf400f5f17",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "PeMlZrUYL1NweRGD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        320,
        256
      ],
      "id": "05ef163c-c39e-498d-8045-693257900d96",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledge",
        "toolDescription": "Use this tool to find answers to questions. Input the question exactly as asked by the user.",
        "qdrantCollection": {
          "__rl": true,
          "value": "example_kb",
          "mode": "list",
          "cachedResultName": "example_kb"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        432,
        272
      ],
      "id": "74b6d731-c95b-4af6-98b1-ea5dca44785e",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "2vrbeUBKPAe7XDSz",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        416,
        416
      ],
      "id": "3cddca4e-db04-4b4d-9d1b-46a7efdf2849",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "PeMlZrUYL1NweRGD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b6a0a5e2-91a3-4c21-b5ab-bea6c1b3e076",
              "name": "knowledge_base",
              "value": "=Question: What is your resume qualification?\n\nanswer: Abdul Wajid  \nKarachi, Sindh, Pakistan.  \n+92-311-0351773       engineer.wajid.ds79@gmail.com  \nEDUCATION                                     LinkedIn     GitHub    Kaggle    Hugging Face    learn.microsoft  \nMehran University of Engineering Technology, Jamshoro, Pakistan  \nB.E., Computer Systems Engineering  \nPROFESSIONAL EXPERIENCE \n2020 - 2024  \nAI Engineer \nX Flow Software Technology LLC (Bluescarf Artificial Intelligence) \nFull Time | May 2025 – Present  \n• Fine-tuned LLMs (GPT, Claude, Llama, Mistral) using LoRA, QLoRA, PEFT, increasing model efficiency by 28%.  \n• Created data pipelines using Apache Spark and Databricks, reducing ETL processing time by 35%.  \n• Built RAG systems with Pinecone and Chroma, improving query response accuracy by 40%.  \n• Deployed ML pipelines with MLflow integrated into CI/CD workflows, achieving 99.5% system uptime.  \n• Key Projects: \n• Sindhi Bhittai ChatBot – RAG-based Sindhi chatbot using LangChain on Bhittai’s works. \n• Sindhi Law Assistant (AI Wakeel) – Legal Q&A chatbot in Sindhi with custom NLP dataset. \n• Sindhi Speech-to-Text Model – Fine-tuned Transformer ASR for Sindhi transcription. \n• Sindhi OCR – Trained Tesseract 5 on 10K pairs; achieved 45% WER, 19% CER. \n• Data Cleaning Pipeline – Regex + Spark/Pandas workflows; boosted data cleaning by 75%. \n• Sindhi LLM Data Pipeline – Preprocessing/tokenization for 118M-token Sindhi corpus. \n• Sindhi dataset: Ambile dataset made and managed by me \nPROJECTS  \nFinal Year Project (FYP): Automated Chest X-ray Report Generation  \n• Developed an AI-powered system to classify chest X-ray images into four categories: Normal, Pneumonia, Tuberculosis, and COVID\n19, achieving a test accuracy of 92.58% using VGG16.   \n• Integrated OpenAI's GPT-4 API to generate professional, contextually relevant radiology reports.  \n• Built a user-friendly interface with Radio, enabling seamless interaction for clinicians.  \n• Conducted model training and evaluation on a combined dataset of 13,500+ X-ray images from Kaggle.  \n• Applied advanced deep learning techniques and frameworks, including TensorFlow and PyTorch, for robust model implementation.  \nPrompt Optimization Engine  \n•Applied prompt engineering, Langchain, and GPT-4 to optimize AI responses.  \nAI E-commerce Chatbot  \n•Developed using Langchain and GPT-4 for enhancing online shopping experiences. RAG \nBased on AI Support Chatbot  \n•Integrated Pinecone vector database with GPT-4 for dynamic query responses. AI \nPersonal Document Chat Model  \n•Utilized Langchain and Chroma vector database, Gemini - Google's large language model. Text \nto Image Generation Web App  \n•Created using Dall-E 3, Flask, showcasing generative AI capabilities.  \nTECHNICAL SKILLS\n • Programming Languages: Python \n• Machine Learning: Supervised and Unsupervised Learning, Classification, Regression, Clustering, Anomaly Detection \n• Deep Learning: CNNs, RNNs, LSTMs, BERT, GPT-3.5/4, Gemini \n• Natural Language Processing (NLP): Word2Vec, BERT, GPT-NER, RAG, LangChain \n• Vector Databases: Pinecone, Chroma, FAISS, Weaviate, Milvus \n• Cloud & Deployment: AWS, Azure, Docker, CI/CD \n• Frameworks & Tools: PyTorch, TensorFlow, LangChain, Flask, Streamlit, Gradio \n• Big Data Technologies: Spark, PySpark \n• Database Management: SQL, MySQL, PostgreSQL \n• Others: Git/GitHub, VS Code, Jupyter Notebooks, Google Colab \nCERTIFICATIONS   \n•Introduction to Python: DataCamp & hackerrank  \n•Foundations of Data Science: Google, Coursera  \n•AI Agents Fundamentals AI Agents Fundamentals Hugging Face  ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        656
      ],
      "id": "f15e152e-ee74-43c4-a249-a52a1d4ae0d0",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "chunkSize": 2000
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        592,
        976
      ],
      "id": "19ee0263-8202-4470-a13d-5382b7c0e8ab",
      "name": "Character Text Splitter"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -16,
        656
      ],
      "id": "d5c82e16-8ee5-47f0-8440-87c192839119",
      "name": "When clicking ‘Test workflow’",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        416,
        848
      ],
      "id": "cee5424d-7b43-49cd-b229-3418515d2ffd",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "PeMlZrUYL1NweRGD",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "qdrantCollection": {
          "__rl": true,
          "value": "example_kb",
          "mode": "list",
          "cachedResultName": "example_kb"
        },
        "options": {
          "collectionConfig": ""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1,
      "position": [
        496,
        656
      ],
      "id": "5d4c0c22-894d-4770-8530-2c9beb334eb5",
      "name": "Qdrant Vector Store1",
      "credentials": {
        "qdrantApi": {
          "id": "2vrbeUBKPAe7XDSz",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        592,
        816
      ],
      "id": "aae6c74d-cd71-4078-9f55-d6de08a7f04a",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! 👋\nMy name is Resume Analyser. How can I assist you today?",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        48,
        48
      ],
      "id": "7c9e9065-0e4e-4ecb-8466-b673b9f85bde",
      "name": "When chat message received",
      "webhookId": "b9ce64ad-0bcf-4c93-a205-5006abe8a87b"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "timezone": "Asia/Karachi"
  },
  "versionId": "c8b8d1fa-fa7c-493f-b86f-330c128310de",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "214396eb6f622509edb879d9f4065e3c733f10e57c7ba01738b7316c03eb03d8"
  },
  "id": "JCMPtXEN50MZBCXo",
  "tags": []
}